"""init migration

Revision ID: 50a2c9afdc87
Revises: 70306ec8a223
Create Date: 2021-12-18 03:15:39.207540

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

revision = '50a2c9afdc87'
down_revision = '70306ec8a223'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book_author',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='jbook'
    )
    op.create_table('book_category',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('popularity', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='jbook'
    )
    op.create_table('book_image',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('src', sa.String(length=400), nullable=True),
    sa.Column('alt_text', sa.String(length=50), nullable=True),
    sa.Column('is_main', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='jbook'
    )
    op.create_table('book_in_shelf_tag',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='jbook'
    )
    op.create_table('book_publisher',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='jbook'
    )
    op.create_table('book_tag',
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('name'),
    sa.UniqueConstraint('name'),
    schema='jbook'
    )
    op.create_table('shelf_image',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('src', sa.String(length=400), nullable=True),
    sa.Column('alt_text', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='jbook'
    )
    op.create_table('shelf_tag',
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('name'),
    sa.UniqueConstraint('name'),
    schema='jbook'
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=25), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username'),
    schema='jbook'
    )
    op.create_table('book',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('annotation', sa.Text(), nullable=True),
    sa.Column('pub_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('publisher_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['publisher_id'], ['jbook.book_publisher.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='jbook'
    )
    op.create_table('shelf',
    sa.Column('uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.Column('avatar_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['avatar_id'], ['jbook.shelf_image.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['jbook.user.id'], ),
    sa.PrimaryKeyConstraint('uid'),
    schema='jbook'
    )
    op.create_table('_m2m_book_book_author',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('book_author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_author_id'], ['jbook.book_author.id'], ),
    sa.ForeignKeyConstraint(['book_id'], ['jbook.book.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'book_author_id'),
    schema='jbook'
    )
    op.create_table('_m2m_book_book_category',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['jbook.book.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['jbook.book_category.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'category_id'),
    schema='jbook'
    )
    op.create_table('_m2m_book_book_tag',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('book_tag', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['jbook.book.id'], ),
    sa.ForeignKeyConstraint(['book_tag'], ['jbook.book_tag.name'], ),
    sa.PrimaryKeyConstraint('book_id', 'book_tag'),
    schema='jbook'
    )
    op.create_table('_m2m_shelf_shelf_tag',
    sa.Column('shelf_uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('shelf_tag', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['shelf_tag'], ['jbook.shelf_tag.name'], ),
    sa.ForeignKeyConstraint(['shelf_uid'], ['jbook.shelf.uid'], ),
    sa.PrimaryKeyConstraint('shelf_uid', 'shelf_tag'),
    schema='jbook'
    )
    op.create_table('book_comment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['jbook.book.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['jbook.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='jbook'
    )
    op.create_table('book_in_shelf',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('shelf_uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['jbook.book.id'], ),
    sa.ForeignKeyConstraint(['shelf_uid'], ['jbook.shelf.uid'], ),
    sa.PrimaryKeyConstraint('id', 'shelf_uid'),
    sa.UniqueConstraint('id'),
    schema='jbook'
    )
    op.create_table('book_rate',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('rate', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['jbook.book.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['jbook.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    schema='jbook'
    )
    op.create_table('shelf_rate',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('shelf_uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('rate', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['shelf_uid'], ['jbook.shelf.uid'], ),
    sa.ForeignKeyConstraint(['user_id'], ['jbook.user.id'], ),
    sa.PrimaryKeyConstraint('id', 'shelf_uid'),
    sa.UniqueConstraint('id'),
    schema='jbook'
    )
    op.create_table('_m2m_book_in_shelf_tag',
    sa.Column('book_in_shelf', sa.Integer(), nullable=False),
    sa.Column('book_in_shelf_tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_in_shelf'], ['jbook.book_in_shelf.id'], ),
    sa.ForeignKeyConstraint(['book_in_shelf_tag_id'], ['jbook.book_in_shelf_tag.id'], ),
    sa.PrimaryKeyConstraint('book_in_shelf', 'book_in_shelf_tag_id'),
    schema='jbook'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('_m2m_book_in_shelf_tag', schema='jbook')
    op.drop_table('shelf_rate', schema='jbook')
    op.drop_table('book_rate', schema='jbook')
    op.drop_table('book_in_shelf', schema='jbook')
    op.drop_table('book_comment', schema='jbook')
    op.drop_table('_m2m_shelf_shelf_tag', schema='jbook')
    op.drop_table('_m2m_book_book_tag', schema='jbook')
    op.drop_table('_m2m_book_book_category', schema='jbook')
    op.drop_table('_m2m_book_book_author', schema='jbook')
    op.drop_table('shelf', schema='jbook')
    op.drop_table('book', schema='jbook')
    op.drop_table('user', schema='jbook')
    op.drop_table('shelf_tag', schema='jbook')
    op.drop_table('shelf_image', schema='jbook')
    op.drop_table('book_tag', schema='jbook')
    op.drop_table('book_publisher', schema='jbook')
    op.drop_table('book_in_shelf_tag', schema='jbook')
    op.drop_table('book_image', schema='jbook')
    op.drop_table('book_category', schema='jbook')
    op.drop_table('book_author', schema='jbook')
    # ### end Alembic commands ###
